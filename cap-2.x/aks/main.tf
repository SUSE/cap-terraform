module "aks-cluster" {
  source = "./cluster"

  location       = var.location
  resource_group = var.resource_group
  dns_prefix     = var.dns_prefix
  k8s_version    = var.k8s_version
  cluster_labels = var.cluster_labels

  ssh_username   = var.ssh_username
  ssh_public_key = var.ssh_public_key

  instance_count = var.instance_count
  instance_type  = var.instance_type
  disk_size_gb   = var.disk_size_gb

  client_id       = var.client_id
  client_secret   = var.client_secret
  tenant_id       = var.tenant_id
  subscription_id = var.subscription_id
  dns_zone_name   = var.dns_zone_name

  email                   = var.email
  admin_password          = var.admin_password
  dns_zone_resource_group = var.dns_zone_resource_group
}

// kubeconfig will be generated by the AKS module

provider "helm" {
  version = "1.3.2"
  alias   = "helm-cap"

  kubernetes {
    config_path = "${path.cwd}/kubeconfig"
  }
}

module "helper-charts" {
  source = "./common/helper-charts"

  providers = {
    helm = helm.helm-cap
  }

  client_id       = var.client_id
  client_secret   = var.client_secret
  tenant_id       = var.tenant_id
  subscription_id = var.subscription_id
  dns_zone_name   = var.dns_zone_name

  email                   = var.email
  dns_zone_resource_group = var.dns_zone_resource_group

  depends_on = [module.aks-cluster]
}

module "cap-charts" {
  source = "./common/cap-charts"

  providers = {
    helm = helm.helm-cap
  }

  cap_domain = var.cap_domain
  //  cap_version = var.cap_version
  cluster_url = module.aks-cluster.cluster_url

  # One variable is initially applied to all security contexts,
  # override to create distinct passwords for each context
  cf_admin_password       = var.admin_password
  uaa_admin_client_secret = var.admin_password
  stratos_admin_password  = var.admin_password
  metrics_admin_password  = var.admin_password

  depends_on = [
    module.aks-cluster,
    module.helper-charts
  ]
}

